{
  "sections": [
    {
      "id": "field",
      "title": "Field-Level Attributes",
      "columns": [
        "Attribute",
        "Description",
        "Requirements"
      ],
      "rows": [
        {
          "code": "[SerializeField]",
          "docLink": "https://docs.unity3d.com/ScriptReference/SerializeField.html",
          "description": "Serialize a private field so it appears in the Inspector.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[SerializeField]",
          "tags": [
            "inspector",
            "serialization"
          ],
          "exampleImg": "serializefield.webp",
          "exampleAlt": "Inspector showing a private field visible because of [SerializeField].",
          "exampleNote": "Use for private variables you want editable without exposing as public."
        },
        {
          "code": "[HideInInspector]",
          "docLink": "https://docs.unity3d.com/ScriptReference/HideInInspector.html",
          "description": "Hide a public or serialized field from the Inspector.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[HideInInspector]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "hideininspector.webp",
          "exampleAlt": "Inspector where a normally visible field is hidden via [HideInInspector].",
          "exampleNote": "Good for keeping data serialized but uncluttered in the Inspector."
        },
        {
          "code": "[NonSerialized]",
          "docLink": "https://docs.unity3d.com/2019.2/Documentation/ScriptReference/NonSerialized.html",
          "description": "Prevent a public field from being serialized by Unity.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[NonSerialized]",
          "tags": [
            "inspector",
            "serialization"
          ],
          "exampleImg": "nonserialized.webp",
          "exampleAlt": "Public field excluded from Unity’s serialization and not saved to scene/prefab.",
          "exampleNote": "Still visible if public; value resets on domain reload and in builds."
        },
        {
          "code": "[FormerlySerializedAs(\"oldName\")]",
          "docLink": "https://docs.unity3d.com/ScriptReference/Serialization.FormerlySerializedAsAttribute.html",
          "description": "Remap serialized data from an old field name after renaming.",
          "requirements": "Unity 2017.3+",
          "type": "field",
          "copy": "[FormerlySerializedAs(\"oldName\")]",
          "tags": [
            "migration",
            "serialization"
          ],
          "exampleImg": "formerlyserializedasoldname.webp",
          "exampleAlt": "Inspector field: Remap serialized data from an old field name after renaming.",
          "exampleNote": "Useful when remap serialized data from an old field name after renaming."
        },
        {
          "code": "[Header(\"Title\")]",
          "docLink": "https://docs.unity3d.com/ScriptReference/HeaderAttribute.html",
          "description": "Draw a bold header label above this field or group.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[Header(\"Title\")]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "headertitle.webp",
          "exampleAlt": "Inspector field: Draw a bold header label above this field or group.",
          "exampleNote": "Useful when draw a bold header label above this field or group."
        },
        {
          "code": "[Space] / [Space(n)]",
          "docLink": "https://docs.unity3d.com/ScriptReference/SpaceAttribute.html",
          "description": "Insert vertical space before the next field.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[Space] / [Space(n)]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "space.webp",
          "exampleAlt": "Extra vertical spacing inserted before the next field block.",
          "exampleNote": "Use <code>[Space(n)]</code> to fine‑tune spacing; plain <code>[Space]</code> uses a default gap."
        },
        {
          "code": "[Tooltip(\"…\")]",
          "docLink": "https://docs.unity3d.com/ScriptReference/TooltipAttribute.html",
          "description": "Show hover-popup help text for the field label in the Inspector.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[Tooltip(\"…\")]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "tooltip.webp",
          "exampleAlt": "Inspector field: Show hover-popup help text for the field label in the Inspector.",
          "exampleNote": "Useful when show hover-popup help text for the field label in the Inspector."
        },
        {
          "code": "[Range(min, max)]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/RangeAttribute.html",
          "descriptionHtml": "Render a slider to clamp numeric values between <code>min</code> and <code>max</code>.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[Range(min, max)]",
          "tags": [
            "inspector",
            "validation"
          ],
          "exampleImgs": ["range-code.webp", "range-inspector.webp"],
          "exampleAlt": "Inspector slider created by <code>[Range]</code> on a float field",
          "exampleNote": "Default slider styling in the built-in Inspector"
        },
        {
          "code": "[Min(value)]",
          "docLink": "https://docs.unity3d.com/ScriptReference/MinAttribute.html",
          "description": "Clamp numeric values to a minimum.",
          "requirements": "Unity 2019.3+",
          "type": "field",
          "copy": "[Min(value)]",
          "tags": [
            "inspector",
            "validation"
          ],
          "exampleImg": "minvalue.webp",
          "exampleAlt": "Inspector field: Clamp numeric values to a minimum (no slider).",
          "exampleNote": "Useful when clamp numeric values to a minimum."
        },
        {
          "code": "[Max(value)]",
          "description": "Clamp numeric values to a maximum.",
          "requirements": "Unity 2020.1+",
          "type": "field",
          "copy": "[Max(value)]",
          "tags": [
            "inspector",
            "validation"
          ],
          "exampleImg": "maxvalue.webp",
          "exampleAlt": "Inspector field: Clamp numeric values to a maximum (no slider).",
          "exampleNote": "Useful when clamp numeric values to a maximum."
        },
        {
          "code": "[TextArea(min, max)]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/TextAreaAttribute.html",
          "descriptionHtml": "Render a multi-line text box between <code>min</code> and <code>max</code> lines.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[TextArea(min, max)]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "textareaminmax.webp",
          "exampleAlt": "Inspector field: Render a multi-line text box between <code>min</code> and <code>max</code> lines.",
          "exampleNote": "Useful when render a multi-line text box between <code>min</code> and <code>max</code> lines."
        },
        {
          "code": "[Multiline]",
          "docLink": "https://docs.unity3d.com/ScriptReference/MultilineAttribute.html",
          "descriptionHtml": "Attribute to make a <code>string</code> be edited with a multi-line textfield.",
          "requirements": "Unity 2017.1+",
          "type": "field",
          "copy": "[Multiline]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "multiline.webp",
          "exampleAlt": "String field shows multiple lines in the Inspector without a scrollbar.",
          "exampleNote": "Unlike TextArea, height is fixed; good for short paragraphs."
        },
        {
          "code": "[Delayed]",
          "docLink": "https://docs.unity3d.com/ScriptReference/DelayedAttribute.html",
          "description": "Delay committing changes to string/numeric fields until focus is lost.",
          "requirements": "Unity 2019.3+",
          "type": "field",
          "copy": "[Delayed]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "delayed.webp",
          "exampleAlt": "Value isn’t applied until focus leaves the field or Enter is pressed.",
          "exampleNote": "Prevents spamming setters while typing—useful for expensive updates."
        },
        {
          "code": "[SerializeReference]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/SerializeReference.html",
          "description": "Serialize polymorphic references (abstract/interfaces).",
          "requirements": "Unity 2019.3+",
          "type": "field",
          "copy": "[SerializeReference]",
          "tags": [
            "serialization"
          ],
          "exampleImg": "serializereference.webp",
          "exampleAlt": "Field holds polymorphic types; Inspector lets you choose concrete implementations.",
          "exampleNote": "Backed by managed reference serialization; avoid for value types/structs."
        },
        {
          "code": "[InspectorName(\"Name\")]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/InspectorNameAttribute.html",
          "description": "Override the label shown in the Inspector.",
          "requirements": "Unity 2018.1+",
          "type": "field",
          "copy": "[InspectorName(\"Name\")]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "inspectornamename.webp",
          "exampleAlt": "Inspector field: Override the label shown in the Inspector.",
          "exampleNote": "Useful when override the label shown in the Inspector."
        },
        {
          "code": "[ContextMenuItem(\"Title\",\"Method\")]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/ContextMenuItemAttribute.html",
          "descriptionHtml": "Add a small button next to the field that calls <code>Method</code>.",
          "requirements": "Unity core",
          "type": "field",
          "copy": "[ContextMenuItem(\"Title\",\"Method\")]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "contextmenuitemtitlemethod.webp",
          "exampleAlt": "Inspector field: Add a small button next to the field that calls <code>Method</code>.",
          "exampleNote": "Useful when add a small button next to the field that calls <code>Method</code>."
        },
        {
          "code": "[NonReorderable]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/NonReorderableAttribute.html",
          "descriptionHtml": "Prevent list reordering UI on a <code>List</code>.",
          "requirements": "Unity 2020.1+",
          "type": "field",
          "copy": "[NonReorderable]",
          "tags": [
            "inspector",
            "ui"
          ],
          "exampleImg": "nonreorderable.webp",
          "exampleAlt": "List field renders without drag handles to prevent element reordering.",
          "exampleNote": "Use when index order has semantic meaning tied to code."
        }
      ]
    },
    {
      "id": "class",
      "title": "Component & Class-Level Attributes",
      "columns": [
        "Attribute",
        "Description",
        "Requirements"
      ],
      "rows": [
        {
          "code": "[AddComponentMenu(\"…\")]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/AddComponentMenu.html",
          "description": "Place this component under a custom submenu.",
          "requirements": "Unity core",
          "type": "class",
          "copy": "[AddComponentMenu(\"…\")]",
          "tags": [
            "component",
            "editor"
          ],
          "exampleImg": "addcomponentmenu….webp",
          "exampleAlt": "Component header: Place this component under a custom submenu.",
          "exampleNote": "Useful when place this component under a custom submenu."
        },
        {
          "code": "[DisallowMultipleComponent]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/DisallowMultipleComponent.html",
          "description": "Prevent duplicates of this component on one GameObject.",
          "requirements": "Unity core",
          "type": "class",
          "copy": "[[DisallowMultipleComponent]",
          "tags": [
            "component",
            "validation"
          ],
          "exampleImg": "disallowmultiplecomponent.webp",
          "exampleAlt": "Prevents adding more than one instance of this component per GameObject.",
          "exampleNote": "Useful for managers or controllers that should be unique on an object."
        },
        {
          "code": "[RequireComponent(typeof(X))]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/RequireComponent.html",
          "description": "Auto-add or enforce component X on the same GameObject.",
          "requirements": "Unity core",
          "type": "class",
          "copy": "[RequireComponent(typeof(X))]",
          "tags": [
            "component",
            "validation"
          ],
          "exampleImg": "requirecomponenttypeofx.webp",
          "exampleAlt": "Component header: Auto-add or enforce component X on the same GameObject.",
          "exampleNote": "Useful when auto-add or enforce component X on the same GameObject."
        },
        {
          "code": "[ExecuteInEditMode]",
          "docLink": "https://docs.unity3d.com/ScriptReference/DisallowMultipleComponent.html",
          "descriptionHtml": "Run this <code>MonoBehaviour</code> in Edit mode.",
          "requirements": "Unity core",
          "type": "class",
          "copy": "[[ExecuteInEditMode]",
          "tags": [
            "component",
            "editor"
          ],
          "exampleImg": "executeineditmode.webp",
          "exampleAlt": "MonoBehaviour methods run in Edit Mode without pressing Play.",
          "exampleNote": "Prefer ExecuteAlways for newer projects; be mindful of Editor‑only code."
        },
        {
          "code": "[ExecuteAlways]",
          "docLink": "https://docs.unity3d.com/ScriptReference/ExecuteAlways.html",
          "description": "Execute in Editor even when disabled or in prefab mode.",
          "requirements": "Unity 2018.1+",
          "type": "class",
          "copy": "[ExecuteAlways]",
          "tags": [
            "component",
            "editor"
          ],
          "exampleImg": "executealways.webp",
          "exampleAlt": "Script executes in Edit Mode and when disabled or in prefab context.",
          "exampleNote": "Guard runtime‑only logic with Application.isPlaying checks."
        },
        {
          "code": "[SelectionBase]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/SelectionBaseAttribute.html",
          "description": "Scene-view clicks on children select this GameObject",
          "requirements": "Unity core",
          "type": "class",
          "copy": "[SelectionBase]",
          "tags": [
            "component",
            "editor"
          ],
          "exampleImg": "selection.webp",
          "exampleAlt": "Clicking a child in the Scene view selects the parent GameObject instead.",
          "exampleNote": "Handy for complex hierarchies like props with many sub‑meshes."
        },
        {
          "code": "[HelpURL(\"url\")]",
          "docLink": "https://docs.unity3d.com/ScriptReference/HelpURLAttribute.html",
          "description": "Add a “?” icon linking to a url.",
          "requirements": "Unity core",
          "type": "class",
          "copy": "[HelpURL(\"url\")]",
          "tags": [
            "component",
            "editor"
          ],
          "exampleImg": "helpurlurl.webp",
          "exampleAlt": "Component header: Add a “?” icon linking to a url.",
          "exampleNote": "Useful when add a “?” icon linking to a url."
        },
        {
          "code": "[DefaultExecutionOrder(n)]",
          "docLink": "https://docs.unity3d.com/2022.3/Documentation/ScriptReference/DefaultExecutionOrder.html",
          "description": "Control script execution order.",
          "requirements": "Unity 2017.2+",
          "type": "class",
          "copy": "[DefaultExecutionOrder(n)]",
          "tags": [
            "component",
            "editor"
          ],
          "exampleImg": "defaultexecutionordern.webp",
          "exampleAlt": "Component header: Control script execution order.",
          "exampleNote": "Useful when control script execution order."
        },
        {
          "code": "[AssemblyIsEditorAssembly]",
          "docLink": "https://docs.unity3d.com/ScriptReference/AssemblyIsEditorAssembly.html",
          "description": "Exclude this assembly from player builds.",
          "requirements": "Unity core",
          "type": "class",
          "copy": "[AssemblyIsEditorAssembly]",
          "tags": [
            "build",
            "editor"
          ],
          "exampleImg": "assemblyiseditorassembly.webp",
          "exampleAlt": "Marks an assembly as Editor‑only so it’s excluded from player builds.",
          "exampleNote": "Place Editor scripts under an Editor assembly to reduce build size."
        },
        {
          "code": "[MovedFrom(...)]",
          "docLink": "https://docs.unity3d.com/ScriptReference/AssemblyIsEditorAssembly.html",
          "description": "API updater remaps types/namespaces after moving.",
          "requirements": "Unity 2019.3+",
          "type": "class",
          "copy": "[MovedFrom(...)]",
          "tags": [
            "migration"
          ],
          "exampleImg": "movedfrom.webp",
          "exampleAlt": "Signals that a type or namespace moved so API Updater can remap usages.",
          "exampleNote": "Helps preserve serialized references after refactors or package splits."
        }
      ]
    },
    {
      "id": "method",
      "title": "Method-Level & Editor Attributes",
      "columns": [
        "Attribute",
        "Description",
        "Requirements"
      ],
      "rows": [
        {
          "code": "[ContextMenu(\"Title\")]",
          "docLink": "https://docs.unity3d.com/ScriptReference/ContextMenu.html",
          "description": "Add a right-click menu to invoke this method in the Inspector.",
          "requirements": "Unity core",
          "type": "method",
          "copy": "[ContextMenu(\"Title\")]",
          "tags": [
            "method",
            "editor"
          ],
          "exampleImg": "contextmenutitle.webp",
          "exampleAlt": "Inspector/Editor method: Add a right-click menu to invoke this method in the Inspector.",
          "exampleNote": "Useful when add a right-click menu to invoke this method in the Inspector."
        },
        {
          "code": "[MenuItem(\"MyMenu/Action\")]",
          "docLink": "https://docs.unity3d.com/ScriptReference/MenuItem.html",
          "description": "Add a top-bar menu item for this static method.",
          "requirements": "Unity core",
          "type": "method",
          "copy": "[MenuItem(\"MyMenu/Action\")]",
          "tags": [
            "method",
            "editor"
          ],
          "exampleImg": "menuitemmymenu.webp",
          "exampleAlt": "Inspector/Editor method: Add a top-bar menu item for this static method.",
          "exampleNote": "Useful when add a top-bar menu item for this static method."
        },
        {
          "code": "[InitializeOnLoadMethod]",
          "docLink": "https://docs.unity3d.com/ScriptReference/InitializeOnLoadMethodAttribute.html",
          "description": "Editor: run this static method when the Editor loads.",
          "requirements": "Unity 2017.1+",
          "type": "method",
          "copy": "[InitializeOnLoadMethod]",
          "tags": [
            "method",
            "editor"
          ],
          "exampleImg": "initializeonloadmethod.webp",
          "exampleAlt": "Static method runs when the Editor loads or scripts recompile.",
          "exampleNote": "Avoid heavy work; initialize caches or register callbacks here."
        },
        {
          "code": "[RuntimeInitializeOnLoadMethod]",
          "docLink": "https://docs.unity3d.com/ScriptReference/RuntimeInitializeOnLoadMethodAttribute.html",
          "description": "Run this static method before any scene loads in playmode/builds.",
          "requirements": "Unity core",
          "type": "method",
          "copy": "[RuntimeInitializeOnLoadMethod]",
          "tags": [
            "method",
            "runtime"
          ],
          "exampleImg": "runtimeinitializeonloadmethod.webp",
          "exampleAlt": "Static method runs before the first scene loads at runtime.",
          "exampleNote": "Specify load types to run at different app phases (BeforeSceneLoad, etc.)."
        }
      ]
    },
    {
      "id": "dots",
      "title": "DOTS & Native / Burst Attributes",
      "columns": [
        "Attribute",
        "Description",
        "Requirements"
      ],
      "rows": [
        {
          "code": "[BurstCompile]",
          "docLink": "https://docs.unity3d.com/Packages/com.unity.burst@1.8/manual/compilation-burstcompile.html",
          "description": "Compile a job/function with Burst for high performance.",
          "requirements": "com.unity.burst 1.0+, Jobs",
          "type": "dots",
          "copy": "[BurstCompile]",
          "tags": [
            "dots",
            "performance"
          ],
          "exampleImg": "burstcompile.webp",
          "exampleAlt": "Method or job is compiled with Burst for major performance gains.",
          "exampleNote": "Use with value types and unmanaged data for best results."
        },
        {
          "code": "[BurstDiscard]",
          "docLink": "https://docs.unity3d.com/ScriptReference/Unity.Burst.BurstDiscardAttribute.html",
          "description": "Exclude a method from Burst compilation.",
          "requirements": "com.unity.burst",
          "type": "dots",
          "copy": "[BurstDiscard]",
          "tags": [
            "dots",
            "performance"
          ],
          "exampleImg": "burstdiscard.webp",
          "exampleAlt": "Excludes a method from Burst so managed or debug code can run.",
          "exampleNote": "Wrap debug logging or conditional paths that Burst cannot compile."
        },
        {
          "code": "[WriteOnly]",
          "docLink": "https://docs.unity3d.com/ScriptReference/Unity.Collections.WriteOnlyAttribute.html",
          "descriptionHtml": "DOTS: mark a <code>NativeArray</code> as write-only.",
          "requirements": "com.unity.collections, Jobs",
          "type": "dots",
          "copy": "[WriteOnly]",
          "tags": [
            "dots",
            "safety"
          ],
          "exampleImg": "writeonly.webp",
          "exampleAlt": "Marks a NativeArray as write‑only to enable safety and performance checks.",
          "exampleNote": "Prevents accidental reads; helps the job scheduler optimize."
        },
        {
          "code": "[ReadOnly]",
          "docLink": "https://docs.unity3d.com/ScriptReference/Unity.Collections.ReadOnlyAttribute.html",
          "descriptionHtml": "DOTS: mark a <code>NativeArray</code> as read-only.",
          "requirements": "com.unity.collections, Jobs",
          "type": "dots",
          "copy": "[ReadOnly]",
          "tags": [
            "dots",
            "safety"
          ],
          "exampleImg": "readonly.webp",
          "exampleAlt": "Marks a NativeArray as read‑only so jobs can safely share data.",
          "exampleNote": "Avoids race conditions and unlocks better parallel scheduling."
        },
        {
          "code": "[DeallocateOnJobCompletion]",
          "docLink": "https://docs.unity3d.com/ScriptReference/Unity.Collections.DeallocateOnJobCompletionAttribute.html",
          "description": "Free a native collection when a job completes.",
          "requirements": "com.unity.collections, Jobs",
          "type": "dots",
          "copy": "[DeallocateOnJobCompletion]",
          "tags": [
            "dots",
            "safety"
          ],
          "exampleImg": "deallocateonjobcompletion.webp",
          "exampleAlt": "Automatically disposes a native container when its job finishes.",
          "exampleNote": "Reduces manual cleanup but only for containers captured by the job."
        },
        {
          "code": "[NativeDisableParallelForRestriction]",
          "docLink": "https://docs.unity3d.com/ScriptReference/Unity.Collections.NativeDisableParallelForRestrictionAttribute.html",
          "description": "Allow unsafe parallel writes in jobs.",
          "requirements": "com.unity.collections, Jobs",
          "type": "dots",
          "copy": "[NativeDisableParallelForRestriction]",
          "tags": [
            "dots",
            "safety"
          ],
          "exampleImg": "nativedisableparallelforrestriction.webp",
          "exampleAlt": "Allows parallel writes to the same data in a ParallelFor job.",
          "exampleNote": "Use cautiously; you must ensure accesses are non‑overlapping."
        },
        {
          "code": "[NativeDisableUnsafePtrRestriction]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/Unity.Collections.LowLevel.Unsafe.NativeDisableUnsafePtrRestrictionAttribute.html",
          "description": "Skip safety checks on pointers in jobs.",
          "requirements": "com.unity.collections, Jobs",
          "type": "dots",
          "copy": "[NativeDisableUnsafePtrRestriction]",
          "tags": [
            "dots",
            "safety"
          ],
          "exampleImg": "nativedisableunsafeptrrestriction.webp",
          "exampleAlt": "Disables safety checks on pointers used inside jobs.",
          "exampleNote": "Necessary for some interop; validate indices to avoid memory corruption."
        },
        {
          "code": "[Preserve]",
          "docLink": "https://docs.unity3d.com/6000.1/Documentation/ScriptReference/Scripting.PreserveAttribute.html",
          "description": "Prevent IL2CPP or managed stripping on this code.",
          "requirements": "UnityEngine.Scripting",
          "type": "dots",
          "copy": "[Preserve]",
          "tags": [
            "build"
          ],
          "exampleImg": "preserve.webp",
          "exampleAlt": "Prevents code and members from being stripped by IL2CPP/linker.",
          "exampleNote": "Apply to reflection‑accessed types or methods to keep them in builds."
        }
      ]
    }
  ]
}